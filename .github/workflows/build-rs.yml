name: build-rs
on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - rosu/**

jobs:
  build:
    defaults:
      run:
        working-directory: rosu
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        arch: [ x86_64, aarch64 ]

    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          components: rustfmt, clippy
      - name: Install target architecture
        if: matrix.arch == 'aarch64'
        run: |
          case ${{ matrix.os }} in
            ubuntu-latest)
              rustup target add aarch64-unknown-linux-gnu
              ;;
            macos-latest)
              rustup target add aarch64-apple-darwin
              ;;
            windows-latest)
              rustup target add aarch64-pc-windows-gnu
              ;;
          esac
      - name: Build x86_64
        if: matrix.arch == 'x86_64'
        run: cargo build --release
      - name: Build aarch64
        if: matrix.arch == 'aarch64'
        run: |
          case ${{ matrix.os }} in
            ubuntu-latest)
            TARGET="--target aarch64-unknown-linux-gnu"
            ;;
          macos-latest)
            TARGET="--target aarch64-apple-darwin"
            ;;
          windows-latest)
            TARGET="--target aarch64-pc-windows-gnu"
            ;;
          esac
          cargo build --release --target $TARGET
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}-build
          path: |
            target/**/release/**rosu_pp_java**
            !target/**/release/**rosu_pp_java.d